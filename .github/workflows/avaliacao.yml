name: Avaliação de Node.js - Correção Automática

# O workflow é disparado a cada pull request que
# é feito para a branch `main` do seu repositório.
on:
  pull_request:
    branches:
      - main

# Define as permissões necessárias para o token de segurança padrão
permissions:
  contents: write
  pull-requests: write

jobs:
  correcao:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do Repositório do Aluno (via Pull Request)
        uses: actions/checkout@v3
        with:
          path: 'projeto-do-aluno'

      - name: Checkout do Repositório de Correção para acessar os scripts e testes
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          path: 'correcao-repo'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar Dependências de Correção
        run: |
          cd correcao-repo
          npm install mysql2 jest axios openai
      
      - name: Iniciar o MySQL e configurar o banco de dados
        run: |
          cd correcao-repo
          node scripts/setup-db.js

      - name: Instalar Dependências do Aluno
        run: |
          cd projeto-do-aluno
          npm install

      - name: Iniciar o Servidor do Aluno
        run: |
          cd projeto-do-aluno
          # A porta precisa ser configurada no projeto do aluno.
          # Sugira que o aluno use uma variável de ambiente, ou passe como parâmetro.
          PORT=4088 npm start &
        env:
          PORT: '4088'

      - name: Aguardar o servidor iniciar
        run: sleep 15

      - name: Executar os Testes de Validação
        id: run_tests
        run: |
          cd correcao-repo
          npx jest tests/ > test_results.txt 2>&1 || true

      - name: Analisar Boas Práticas com IA
        id: ia-review
        run: |
          cd correcao-repo
          # O script 'review-code.js' lê o código do aluno na pasta 'projeto-do-aluno'
          node scripts/review-code.js > ia_report.txt
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Gerar Relatório de Feedback
        id: feedback-report
        run: |
          cd correcao-repo
          echo "## Relatório de Correção Automatizada" > feedback.md
          echo "### 1. Testes Funcionais" >> feedback.md
          cat test_results.txt >> feedback.md
          echo "### 2. Análise de Boas Práticas (por IA)" >> feedback.md
          cat ia_report.txt >> feedback.md

      - name: Comentar no Pull Request com o Feedback
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const feedback = fs.readFileSync('correcao-repo/feedback.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: feedback
            });

      - name: Limpar o ambiente Docker
        if: always()
        run: |
          cd correcao-repo
          node scripts/clean-up.js